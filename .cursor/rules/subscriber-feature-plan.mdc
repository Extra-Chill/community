---
description: 
globs: 
alwaysApply: false
---
## Plan: Unified Band Email Subscribers

**Objective:** Create a single, unified system for managing email subscribers for each band. This system will consolidate:
1.  Visitors who subscribe via an email form on the band's public link page.
2.  Platform users who follow a band and explicitly consent to share their email with that band.
The goal is to provide band managers with a single list of all users who have opted-in to email communication, regardless of the subscription source, and to prevent duplicate entries by merging records where possible.

**Key Changes & Unified Logic (Implemented):**

*   **Single Source of Truth:** The `wp_band_subscribers` custom database table is the sole repository for all consented email addresses for each band.
*   **No Separate "Follower" List for Email Management:** The "Subscribers" tab in the band management interface displays users exclusively from `wp_band_subscribers`. The previous concept of a separate "Followers" list for email export is deprecated and its UI removed from the tab.
*   **Merging Records:** When a platform user follows a band and consents (or manages consent via settings), if their email address already exists in `wp_band_subscribers` for that band, the existing record will be updated with their `user_id`, `username`, and the `source` will reflect 'platform_follow_consent'. `REPLACE INTO` (or equivalent logic) is used.

**Status Update (Post-Implementation):**

1.  **Frontend (Band Management Page - "Subscribers" Tab):**
    *   The tab in `page-templates/manage-band-profile.php` (content from `band-platform/manage-band-profile-tabs/tab-subscribers.php`) is named "Subscribers".
    *   This tab displays a list of subscribers fetched *exclusively* from the `wp_band_subscribers` table for the current band profile. (Implemented - general follower display removed).
    *   AJAX handler `extrch_fetch_band_subscribers_ajax` (in `band-platform/subscribe/subscribe-data-functions.php`) queries `wp_band_subscribers`. (Existing - verified)
    *   JavaScript (`band-platform/js/manage-band-subscribers.js`) handles fetching, displaying this unified list (including a 'Source' column), and pagination. (Existing - verified)
    *   The "Export CSV" button exports data from `wp_band_subscribers` via the `extrch_export_subscribers_csv` AJAX action. (Existing - verified)
    *   The old UI for displaying general followers (not necessarily email subscribers) has been removed from this tab. (Implemented)

2.  **Frontend (Link Page Management Page - Advanced Tab - Subscription Settings):**
    *   (Existing requirement - not part of this specific refactor but remains valid for future work) Add a section to the "Advanced" tab in `page-templates/manage-link-page.php` for "Subscription Settings". Options: "Show Subscribe Icon (opens modal)", "Show Inline Subscribe Form", "Disable Subscription Feature". Store selection in `band_link_page` meta. Add a field for customizable subscribe form description text.

3.  **Data Storage (Custom Table - `wp_band_subscribers`):**
    *   The PHP file (`band-platform/subscribe/subscriber-db.php`) defines the `wp_band_subscribers` table schema.
    *   **Schema (Updated & Implemented):**
        *   `subscriber_id` (BIGINT, primary key, auto-increment) // Changed from `id` (INT) for consistency
        *   `band_profile_id` (BIGINT, indexed)
        *   `user_id` (BIGINT, nullable, indexed) - Foreign key to `wp_users.ID`
        *   `subscriber_email` (VARCHAR(255), indexed)
        *   `username` (VARCHAR(255), nullable)
        *   `subscribed_at` (DATETIME)
        *   `source` (VARCHAR(50)) - e.g., 'link_page_form', 'platform_follow_consent' // 'link_page_modal', 'link_page_inline' consolidated to 'link_page_form' for simplicity unless distinct handling is needed.
        *   `exported` (TINYINT(1) DEFAULT 0)
        *   Unique key on (`subscriber_email`, `band_profile_id`). // Changed from (`band_profile_id`, `subscriber_email`) for potential query optimization, verify if impactful.
    *   Activation hook logic creates/updates the table. (Existing - verified)

4.  **Backend (Subscription & Consent Handling - Implemented in `band-platform/band-following.php` and `band-platform/subscribe/subscribe-data-functions.php`):**
    *   **Link Page Subscriptions (via `extrch_link_page_subscribe_ajax_handler` in `subscribe-data-functions.php`):**
        *   Adds new records to `wp_band_subscribers` with `source` = 'link_page_form'. `user_id` and `username` are NULL. (Existing - verified)
    *   **Platform User Follow & Consent (in `bp_follow_band` in `band-following.php`):**
        *   If consent is given, adds/updates (using `REPLACE`) the user's record in `wp_band_subscribers` with their `user_id`, email, username, and `source` = 'platform_follow_consent'. (Implemented)
        *   If consent is *not* given (or implicitly revoked), it removes any existing 'platform_follow_consent' sourced subscription for that user/band. (Implemented)
        *   The `_band_follow_email_permissions` user meta is no longer used here and has been removed/deprecated from this function. (Implemented)
    *   **Platform User Unfollows Band (in `bp_unfollow_band` in `band-following.php`):**
        *   Removes the user's record from `wp_band_subscribers` if `user_id` and `band_profile_id` match AND `source` is 'platform_follow_consent'. (Implemented)
        *   The `_band_follow_email_permissions` user meta is no longer used here. (Implemented)
        *   **Preventing Duplicates:** The unique key on (`band_profile_id`, `subscriber_email`) in `wp_band_subscribers` handles direct duplicates. `REPLACE` logic handles merging/updating. (Verified)

5.  **Backend (Subscriber List & Export - `band-platform/subscribe/subscribe-data-functions.php`):**
    *   `extrch_get_band_subscribers()`: Fetches subscriber data from `wp_band_subscribers`. (Existing - verified)
    *   `extrch_fetch_band_subscribers_ajax()`: AJAX handler for fetching paginated subscribers for the band management tab. (Existing - verified)
    *   `extrch_export_subscribers_csv()`: AJAX handler for CSV export, queries `wp_band_subscribers`. (Existing - verified)

6.  **Frontend (Public Link Page - `band-platform/extrch.co-link-page/js/link-page-subscribe.js`):**
    *   (Existing - UI based on `_link_page_subscribe_display_mode`). AJAX submission to `extrch_link_page_subscribe_ajax_handler`.

7.  **Styling:**
    *   (Existing - CSS in `band-platform/subscribe/css/subscribe-public.css` and `band-platform/subscribe/css/subscribe-admin.css`).

8.  **User Settings "Subscriptions" Tab (`page-templates/settings-page.php`):**
    *   Users can view bands they are subscribed to (via `wp_band_subscribers` where `user_id` matches and source indicates platform consent).
    *   The `bp_ajax_update_user_band_subscriptions_handler` in `band-platform/band-following.php` has been refactored to add/remove records in `wp_band_subscribers` based on user choices (for `source = 'platform_follow_consent'`) and fully removes the old `_band_follow_email_permissions` meta. (Implemented)

9.  **Documentation:**
    *   `project-architecture.mdc` has been updated with details of this unified subscriber system. (Implemented)

10. **Migration:**
    *   (Remaining Task) Develop a one-time migration script or WP-CLI command to populate `wp_band_subscribers` from any users who had `_band_follow_email_permissions` set to true for specific bands before this change.

**Note (Updated):**
- The `_followed_band_profile_ids` user meta in `band-platform/band-following.php` still tracks *all* bands a user follows, regardless of email consent.
- The `_band_follower_count` post meta on the `band_profile` CPT (updated by `bp_maybe_update_band_follower_count`) will continue to reflect the total number of users following the band via the platform, not necessarily the number of email subscribers in `wp_band_subscribers`.
- The user meta `_band_follow_email_permissions` is now fully deprecated and its usage removed from core logic. Functions like `bp_handle_export_band_followers_csv` that relied on it have been removed.
- The subscribe form description editability and matching link page card style for the subscribe form/modal are still valid future requirements (Step 2).

